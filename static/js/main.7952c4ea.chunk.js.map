{"version":3,"sources":["store/characters/actions.js","store/characters/reducers.js","constants/pagination.constants.js","store/episodes/actions.js","store/episodes/reducers.js","store/location/actions.js","store/location/reducers.js","store/reducers.js","components/characters/CharacterItem.jsx","constants/filter.constants.js","components/filters/Filters.jsx","components/characters/Characters.jsx","components/filters/EpisodesFilters.jsx","components/episodes/Episodes.jsx","components/filters/LocationFilters.jsx","components/location/Location.jsx","components/UI/TabPanel.jsx","components/SimpleTabs.jsx","containers/TabsContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["PUT_CHARACTERS","ADD_FILTER","DELETE_FILTER","CHANGE_PAGINATION","getCharacters","dispatch","getState","fetch","URLSearchParams","JSON","parse","stringify","characters","filters","page","pagination","per","then","response","json","type","payload","initialState","data","total","PUT_EPISODES","getEpisodes","episodes","episodePage","PUT_LOCATION","getLocation","location","locationPage","combineReducers","state","action","key","value","CharacterItem","props","React","useState","anchorEl","setAnchorEl","open","Boolean","id","undefined","className","onClick","event","currentTarget","src","character","image","name","species","status","gender","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","STATUS_OPTIONS","label","GENDER_OPTIONS","FILTERS_KEYS","Filters","selectValue","setValue","useDispatch","handleChange","prevState","FormControl","InputLabel","Select","labelId","onChange","target","MenuItem","map","option","TextField","Characters","info","results","useEffect","handlePaginationChange","i","Pagination","count","pages","EpisodesFilters","episode","useStyles","makeStyles","table","width","Episodes","classes","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","row","tableR","scope","air_date","url","LocationFilters","dimension","Location","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","connect","a11yProps","AppBar","position","Tabs","variant","centered","newValue","Tab","TabsContainer","this","Component","mapDispatchToProps","App","store","createStore","rootReducer","applyMiddleware","logger","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7952c4ea.chunk.js","sourcesContent":["export const PUT_CHARACTERS = 'PUT_CHARACTERS';\r\nexport const ADD_FILTER = 'ADD_FILTER';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\nexport const CHANGE_PAGINATION = 'CHANGE_PAGINATION';\r\n\r\nconst API = 'https://rickandmortyapi.com/api/character/?';\r\n\r\nexport const putCharacters = (dataFromServer) => {\r\n  return {\r\n    type: PUT_CHARACTERS,\r\n    payload: dataFromServer\r\n  };\r\n};\r\n\r\nexport const addFilter = (payload) => {\r\n  return {\r\n    type: ADD_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const deleteFilter = (payload) => {\r\n  return {\r\n    type: DELETE_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const changePagination = (payload) => {\r\n  return {\r\n    type: CHANGE_PAGINATION,\r\n    payload\r\n  };\r\n}\r\n\r\n\r\nexport const getCharacters = () => (dispatch, getState) => {\r\n  fetch(API + new URLSearchParams({\r\n  ...JSON.parse(JSON.stringify(getState().characters.filters)),\r\n  page:getState().characters.pagination.page,\r\n  per:getState().characters.pagination.per\r\n  }))\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    dispatch(putCharacters(json));\r\n  })\r\n}","import { PUT_CHARACTERS, ADD_FILTER, DELETE_FILTER, CHANGE_PAGINATION } from './actions';\r\nimport { DEFAULT_ITEMS_PER_PAGE, DEFAULT_PAGE } from '../../constants/pagination.constants'\r\n\r\nconst initialState = {\r\n  data: {},\r\n  filters: {},\r\n  pagination: {\r\n    per: DEFAULT_ITEMS_PER_PAGE,\r\n    page: DEFAULT_PAGE,\r\n    total: 0,\r\n  }\r\n}\r\n\r\nexport const charactersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PUT_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      }\r\n    case ADD_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload.key]: action.payload.value\r\n        },\r\n        pagination: {\r\n          ...state.pagination,\r\n          page: DEFAULT_PAGE\r\n        }\r\n      }\r\n    case DELETE_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload]: null\r\n        },\r\n      }\r\n    case CHANGE_PAGINATION:\r\n      return {\r\n        ...state,\r\n        pagination: {\r\n          ...state.pagination,\r\n          [action.payload.key]: action.payload.value\r\n        }\r\n      }\r\n  }\r\n  return state;\r\n};","export const DEFAULT_FULL_LIST = 10000\r\nexport const DEFAULT_ITEMS_PER_PAGE = 10\r\nexport const DEFAULT_PAGE = 1\r\n\r\nexport const PAGINATION_KEYS = {\r\n  per: 'per',\r\n  page: 'page'\r\n}","export const PUT_EPISODES = 'PUT_EPISODES';\r\nexport const ADD_FILTER = 'ADD_FILTER';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\nexport const CHANGE_PAGINATION = 'CHANGE_PAGINATION';\r\n\r\nconst API = 'https://rickandmortyapi.com/api/episode/?';\r\n\r\nexport const putEpisodes = (dataFromServer) => {\r\n  return {\r\n    type: PUT_EPISODES,\r\n    payload: dataFromServer\r\n  };\r\n};\r\n\r\nexport const addFilter = (payload) => {\r\n  return {\r\n    type: ADD_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const deleteFilter = (payload) => {\r\n  return {\r\n    type: DELETE_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const changePagination = (payload) => {\r\n  return {\r\n    type: CHANGE_PAGINATION,\r\n    payload\r\n  };\r\n}\r\n\r\n\r\nexport const getEpisodes = () => (dispatch, getState) => {\r\n  fetch(API + new URLSearchParams({\r\n  ...JSON.parse(JSON.stringify(getState().episodes.filters)),\r\n  page:getState().episodes.pagination.episodePage,\r\n  per:getState().episodes.pagination.per\r\n  }))\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    dispatch(putEpisodes(json));\r\n  })\r\n}","import { PUT_EPISODES, ADD_FILTER, DELETE_FILTER, CHANGE_PAGINATION } from './actions';\r\nimport { DEFAULT_ITEMS_PER_PAGE, DEFAULT_PAGE } from '../../constants/pagination.constants'\r\n\r\nconst initialState = {\r\n  data: {},\r\n  filters: {},\r\n  pagination: {\r\n    per: DEFAULT_ITEMS_PER_PAGE,\r\n    episodePage: DEFAULT_PAGE,\r\n    total: 0\r\n  }\r\n}\r\n\r\nexport const episodesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PUT_EPISODES:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      }\r\n    case ADD_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload.key]: action.payload.value\r\n        },\r\n        pagination: {\r\n          ...state.pagination,\r\n          episodePage: DEFAULT_PAGE\r\n        }\r\n      }\r\n    case DELETE_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload]: null\r\n        },\r\n      }\r\n    case CHANGE_PAGINATION:\r\n      return {\r\n        ...state,\r\n        pagination: {\r\n          ...state.pagination,\r\n          [action.payload.key]: action.payload.value\r\n        }\r\n      }\r\n  }\r\n  return state;\r\n};","export const PUT_LOCATION = 'PUT_LOCATION';\r\nexport const ADD_FILTER = 'ADD_FILTER';\r\nexport const DELETE_FILTER = 'DELETE_FILTER';\r\nexport const CHANGE_PAGINATION = 'CHANGE_PAGINATION';\r\n\r\nconst API = 'https://rickandmortyapi.com/api/location/?';\r\n\r\nexport const putLocation = (dataFromServer) => {\r\n  return {\r\n    type: PUT_LOCATION,\r\n    payload: dataFromServer\r\n  };\r\n};\r\n\r\nexport const addFilter = (payload) => {\r\n  return {\r\n    type: ADD_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const deleteFilter = (payload) => {\r\n  return {\r\n    type: DELETE_FILTER,\r\n    payload\r\n  };\r\n}\r\n\r\nexport const changePagination = (payload) => {\r\n  return {\r\n    type: CHANGE_PAGINATION,\r\n    payload\r\n  };\r\n}\r\n\r\n\r\nexport const getLocation = () => (dispatch, getState) => {\r\n  fetch(API + new URLSearchParams({\r\n  ...JSON.parse(JSON.stringify(getState().location.filters)),\r\n  page:getState().location.pagination.locationPage,\r\n  per:getState().location.pagination.per\r\n  }))\r\n  .then(response => response.json())\r\n  .then(json => {\r\n    dispatch(putLocation(json));\r\n  })\r\n}","import { PUT_LOCATION, ADD_FILTER, DELETE_FILTER, CHANGE_PAGINATION } from './actions';\r\nimport { DEFAULT_ITEMS_PER_PAGE, DEFAULT_PAGE } from '../../constants/pagination.constants'\r\n\r\n\r\nconst initialState = {\r\n  data: {},\r\n  filters: {},\r\n  pagination: {\r\n    per: DEFAULT_ITEMS_PER_PAGE,\r\n    locationPage: DEFAULT_PAGE,\r\n    total: 0\r\n  }\r\n}\r\n\r\nexport const locationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PUT_LOCATION:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      }\r\n    case ADD_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload.key]: action.payload.value\r\n        },\r\n        pagination: {\r\n          ...state.pagination,\r\n          locationPage: DEFAULT_PAGE\r\n        }\r\n      }\r\n    case DELETE_FILTER:\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          ...state.filters,\r\n          [action.payload]: null\r\n        },\r\n      }\r\n    case CHANGE_PAGINATION:\r\n      return {\r\n        ...state,\r\n        pagination: {\r\n          ...state.pagination,\r\n          [action.payload.key]: action.payload.value\r\n        }\r\n      }\r\n  }\r\n  return state;\r\n};","import { combineReducers } from \"redux\";\r\nimport { charactersReducer } from './characters/reducers';\r\nimport { episodesReducer } from './episodes/reducers';\r\nimport { locationReducer } from './location/reducers';\r\n\r\nexport default combineReducers({\r\n  characters: charactersReducer,\r\n  episodes: episodesReducer,\r\n  location: locationReducer,\r\n});","import React from 'react';\r\n\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport '../../styles/style.css'\r\n\r\nconst CharacterItem = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n  return (\r\n    <div>\r\n      <div className='box' onClick={handleClick}>\r\n        <img src={props.character.image} />\r\n        <span>{`Name: ${props.character.name}`}</span>\r\n        <span>{`Species: ${props.character.species}`}</span>\r\n        <span>{`Status: ${props.character.status}`}</span>\r\n        <span>{`Gender: ${props.character.gender}`}</span>\r\n      </div>\r\n      <Popover\r\n        className='cardPopover'\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography className='cardInfo'>About XD: <pre>{JSON.stringify(props.character, null, 2)}</pre></Typography>\r\n      </Popover>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CharacterItem","export const STATUS_OPTIONS = [{\r\n  label: 'Alive',\r\n  value: 'alive',\r\n}, {\r\n  label: 'Dead',\r\n  value: 'dead',\r\n},{\r\n  label: 'Unknown',\r\n  value: 'unknown',\r\n}\r\n]\r\n\r\nexport const GENDER_OPTIONS = [{\r\n  label: 'Female',\r\n  value: 'female',\r\n}, {\r\n  label: 'Male',\r\n  value: 'male',\r\n},{\r\n  label: 'Genderless',\r\n  value: 'genderless',\r\n},{\r\n  label: 'Unknown',\r\n  value: 'unknown',  \r\n}\r\n]\r\n\r\nexport const FILTERS_KEYS = {\r\n  status: 'status',\r\n  gender: 'gender',\r\n  species: 'species',\r\n  name: 'name',\r\n  episode: 'episode',\r\n  type: 'type',\r\n  dimension: 'dimension',\r\n}","import React, { useState }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { addFilter } from '../../store/characters/actions';\r\nimport { getCharacters } from '../../store/characters/actions';\r\n\r\n\r\nimport { FILTERS_KEYS, STATUS_OPTIONS, GENDER_OPTIONS } from '../../constants/filter.constants';\r\nimport '../../styles/style.css';\r\n\r\n\r\nconst Filters = (props) => {\r\n  \r\n  const [selectValue, setValue] = useState({})\r\n  const dispatch = useDispatch();\r\n  const handleChange = (key, value) => {\r\n    dispatch(addFilter({key, value}));\r\n    setValue((prevState) => ({\r\n      ...prevState,\r\n      [key]: value\r\n    }))  \r\n    dispatch(getCharacters({}));\r\n  };\r\n\r\n  return (\r\n    <div className='filterItems'>\r\n      <h3 className='formControl'>FILTERS:</h3>\r\n      <FormControl className='formControl'>\r\n      {/* STATUS */}\r\n        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-outlined-label'\r\n          id='demo-simple-select-outlined'\r\n          value={selectValue.status}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.status, event.target.value)}\r\n        >\r\n            <MenuItem value={undefined}>\r\n              <em>None</em>\r\n            </MenuItem>\r\n          {STATUS_OPTIONS.map(option => (\r\n            <MenuItem value={option.value}>{option.label}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {/* GENDER */}\r\n      <FormControl className='formControl'>\r\n        <InputLabel id=\"demo-simple-select-label\">Gender</InputLabel>\r\n        <Select\r\n          labelId='demo-simple-select-outlined-label'\r\n          id='demo-simple-select-outlined'\r\n          value={selectValue.gender}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.gender, event.target.value)}\r\n        >\r\n            <MenuItem value={undefined}>\r\n              <em>None</em>\r\n            </MenuItem>\r\n          {GENDER_OPTIONS.map(option => (\r\n            <MenuItem value={option.value}>{option.label}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {/* SPECIES */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n          id=\"standard-search\"\r\n          label=\"Species\"\r\n          value={selectValue.species}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.species, event.target.value)}\r\n          type=\"search\" \r\n        />\r\n      </FormControl>\r\n      {/* NAME */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n          id=\"standard-search\"\r\n          label=\"Name\"\r\n          value={selectValue.name}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.name, event.target.value)}\r\n          type=\"search\" \r\n        />\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Filters","import React, { useEffect }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { getCharacters, changePagination } from '../../store/characters/actions';\r\nimport CharacterItem from '../characters/CharacterItem';\r\nimport Filters from '../filters/Filters';\r\n\r\n\r\n\r\nconst Characters = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { pagination = {},   state, state: {info = {} }, state: { results = [] } = {} } = props;\r\n\r\n  useEffect(() => {\r\n      dispatch(getCharacters({}))\r\n  },[]);\r\n  \r\n  const handlePaginationChange = (key, value) => {\r\n    dispatch(changePagination({key, value}))\r\n    dispatch(getCharacters({}))\r\n  }\r\n  // let resultWith10Elements = [];\r\n  // const splitArray = ( array ) => {\r\n  //   while (array.length > 0) {\r\n  //       let arrayElement = array.splice(0,10);\r\n  //       resultWith10Elements.push(arrayElement);\r\n  //   }\r\n  //   return resultWith10Elements;\r\n  // }\r\n  return  (\r\n    <div className='container'>\r\n      <Filters />\r\n      <div className='box-container'>\r\n        {results.map((character, i) => {\r\n            return <CharacterItem\r\n              key={i}\r\n              character={character} \r\n            />\r\n          })\r\n        }\r\n      </div>\r\n    <Pagination count={info.pages} page={pagination.page} onChange={(event, page) => handlePaginationChange('page', page)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Characters","import React, { useState }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { addFilter } from '../../store/episodes/actions';\r\nimport { getEpisodes } from '../../store/episodes/actions';\r\n\r\n\r\nimport { FILTERS_KEYS } from '../../constants/filter.constants';\r\nimport '../../styles/style.css';\r\n\r\n\r\nconst EpisodesFilters = (props) => {\r\n  \r\n  const [selectValue, setValue] = useState({})\r\n  const dispatch = useDispatch();\r\n  const handleChange = (key, value) => {\r\n    dispatch(addFilter({key, value}));\r\n    setValue((prevState) => ({\r\n      ...prevState,\r\n      [key]: value\r\n    }))  \r\n    dispatch(getEpisodes({}));\r\n  };\r\n\r\n  return (\r\n    <div className='filterItems'>\r\n      <h3 className='formControl'>FILTERS:</h3>\r\n      {/* EPISODE */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n          id=\"standard-search\"\r\n          label=\"Episode\"\r\n          value={selectValue.episode}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.episode, event.target.value)}\r\n          type=\"search\" \r\n        />\r\n      </FormControl>\r\n      {/* NAME */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n          id=\"standard-search\"\r\n          label=\"Name\"\r\n          value={selectValue.name}\r\n          onChange={(event) => handleChange(FILTERS_KEYS.name, event.target.value)}\r\n          type=\"search\" \r\n        />\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default EpisodesFilters","import React, { useState, useEffect }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getEpisodes, changePagination } from '../../store/episodes/actions';\r\nimport EpisodesFilters from '../filters/EpisodesFilters';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 50,\r\n  },\r\n});\r\n\r\nconst Episodes = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getEpisodes({}))\r\n  },[]);\r\n  const { pagination, state, state: {info = {} }, state: { results = [] } = {} } = props;\r\n  \r\n  const handlePaginationChange = (key, value) => {\r\n    dispatch(changePagination({key, value}))\r\n    dispatch(getEpisodes({}))\r\n  }\r\n\r\n  return  (\r\n    \r\n    <div className=''>\r\n      <EpisodesFilters />\r\n    <TableContainer component={Paper}>\r\n      <Table className={''} size=\"small\" aria-label=\"a dense table\">\r\n      <TableHead>\r\n        <TableRow key={''}>\r\n          <TableCell className='table__title'>\r\n              {'id'}\r\n          </TableCell>\r\n          <TableCell>{'Name'}</TableCell>\r\n          <TableCell>{'Episode'}</TableCell>\r\n          <TableCell>{'Air date'}</TableCell>\r\n          <TableCell>{'Url'}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {results.map((row) => (\r\n          <TableRow key={row.id} className={classes.tableR}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.id}\r\n            </TableCell>\r\n            <TableCell >{row.name}</TableCell>\r\n            <TableCell>{row.episode}</TableCell>\r\n            <TableCell>{row.air_date}</TableCell>\r\n            <TableCell>{row.url}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <Pagination count={info.pages} page={pagination.episodePage} onChange={(event, page) => handlePaginationChange('episodePage', page)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Episodes","import React, { useState }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { addFilter } from '../../store/location/actions';\r\nimport { getLocation } from '../../store/location/actions';\r\n\r\n\r\nimport { FILTERS_KEYS } from '../../constants/filter.constants';\r\nimport '../../styles/style.css';\r\n\r\n\r\nconst LocationFilters = (props) => {\r\n  \r\n  const [selectValue, setValue] = useState({})\r\n  const dispatch = useDispatch();\r\n  const handleChange = (key, value) => {\r\n    dispatch(addFilter({key, value}));\r\n    setValue((prevState) => ({\r\n      ...prevState,\r\n      [key]: value\r\n    }))  \r\n    dispatch(getLocation({}));\r\n  };\r\n\r\n  return (\r\n    <div className='filterItems'>\r\n      <h3 className='formControl'>FILTERS:</h3>\r\n      {/* EPISODE */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n        id=\"standard-search\"\r\n         label=\"Type\"\r\n         value={selectValue.type}\r\n         onChange={(event) => handleChange(FILTERS_KEYS.type, event.target.value)}\r\n         type=\"search\" \r\n        />\r\n      </FormControl>\r\n      {/* NAME */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n        id=\"standard-search\"\r\n         label=\"Name\"\r\n         value={selectValue.name}\r\n         onChange={(event) => handleChange(FILTERS_KEYS.name, event.target.value)}\r\n         type=\"search\" \r\n        />\r\n      </FormControl>\r\n      {/* DIMENSION */}\r\n      <FormControl className='formControl'>\r\n        <TextField \r\n        id=\"standard-search\"\r\n         label=\"Dimension\"\r\n         value={selectValue.dimension}\r\n         onChange={(event) => handleChange(FILTERS_KEYS.dimension, event.target.value)}\r\n         type=\"search\" \r\n        />\r\n      </FormControl>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default LocationFilters","import React, { useEffect }  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { getLocation, changePagination } from '../../store/location/actions';\r\nimport LocationFilters from '../filters/LocationFilters';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: 50,\r\n  },\r\n});\r\n\r\nconst Location = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getLocation({}))\r\n  },[]);\r\n  const { pagination, state, state: {info = {} }, state: { results = [] } = {} } = props;\r\n  \r\n  const handlePaginationChange = (key, value) => {\r\n    dispatch(changePagination({key, value}))\r\n    dispatch(getLocation({}))\r\n  }\r\n\r\n  return  (\r\n    \r\n    <div className=''>\r\n      <LocationFilters />\r\n    <TableContainer component={Paper}>\r\n      <Table className={''} size=\"small\" aria-label=\"a dense table\">\r\n      <TableHead>\r\n        <TableRow key={''}>\r\n          <TableCell className='table__title'>\r\n              {'id'}\r\n          </TableCell>\r\n          <TableCell>{'Name'}</TableCell>\r\n          <TableCell>{'Type'}</TableCell>\r\n          <TableCell>{'Dimension'}</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {results.map((row) => (\r\n          <TableRow key={row.id} className={classes.tableR}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.id}\r\n            </TableCell>\r\n            <TableCell >{row.name}</TableCell>\r\n            <TableCell>{row.type}</TableCell>\r\n            <TableCell>{row.dimension}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    <Pagination count={info.pages} page={pagination.locationPage} onChange={(event, page) => handlePaginationChange('locationPage', page)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Location","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TabPanel = (props) => {\r\n\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={4}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\n\r\nexport default TabPanel","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Characters from './characters/Characters'\r\nimport Episodes from './episodes/Episodes';\r\nimport Location from './location/Location';\r\nimport TabPanel from './UI/TabPanel'\r\n\r\n\r\nconst SimpleTabs = (props) => {\r\n  const { state } = props;\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className='appbar'>\r\n      <AppBar position='static'>\r\n        <Tabs variant='fullWidth' centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label='characters' {...a11yProps(0)} />\r\n          <Tab label='episodes' {...a11yProps(1)} />\r\n          <Tab label='locations' {...a11yProps(2)} />\r\n          <Tab label='todoList' {...a11yProps(3)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Characters state={state.characters.data} pagination={state.characters.pagination} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Episodes state={state.episodes.data} pagination={state.episodes.pagination} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Location state={state.location.data} pagination={state.location.pagination} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        toDoList\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(SimpleTabs)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SimpleTabs from '../components/SimpleTabs';\r\nimport { getCharacters } from '../store/characters/actions';\r\nimport { getEpisodes } from '../store/episodes/actions';\r\nimport { getLocation } from '../store/location/actions';\r\n\r\n\r\n\r\nclass TabsContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <SimpleTabs {...this.props} />\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getCharacters,\r\n    getEpisodes,\r\n    getLocation,\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabsContainer);","import React from 'react'\nimport { createStore, compose, applyMiddleware } from 'redux';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from './store/reducers';\nimport TabsContainer from './containers/TabsContainer';\n\nimport './App.css';\n\nconst App = () => {\n  const store = createStore(rootReducer, applyMiddleware(logger, thunk));\n\n  return (\n    <Provider store={store}>\n      <div className=\"wrapper\">\n        <h1>Rick&Morty</h1>\n        <div className=\"forms\">\n          <TabsContainer />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}